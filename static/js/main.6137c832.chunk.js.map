{"version":3,"sources":["Components/Section/Section.js","Components/Phonebook/Phonebook.js","Components/Contacts/Contacts.js","Components/Filter/Filter.js","App.js","index.js"],"names":["Section","title","children","stateDefault","name","number","Phonebook","addContact","useState","state","setState","inputHeandler","target","value","test","prev","className","type","placeholder","onChange","e","onClick","preventDefault","obj","id","uuidv4","alert","checkContact","Сontacts","contacts","removeContact","map","contact","key","src","alt","Filter","inputHeandlerFilter","filter","resetInput","length","App","filteredContacts","find","item","newArray","toUpperCase","includes","sort","a","b","nameA","nameB","getArrayContacts","localStorage","getItem","this","JSON","parse","setItem","stringify","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6137c832.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <div>\r\n      <h2>{title}</h2>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Section;\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport \"./Phonebook.css\";\r\n\r\nconst stateDefault = {\r\n  name: \"\",\r\n  number: \"\",\r\n};\r\n\r\nconst Phonebook = ({ addContact }) => {\r\n  const [state, setState] = useState({ ...stateDefault });\r\n\r\n  const inputHeandler = ({ target }) => {\r\n    const { value, name } = target;\r\n    if (/^\\s+$/.test(value) || /^\\s+$/.test(name)) {\r\n      return;\r\n    }\r\n    setState((prev) => ({ ...prev, [name]: value }));\r\n  };\r\n  const checkContact = (e) => {\r\n    if (state.name === \"\" || state.number === \"\") {\r\n      alert(\"Заповніть поля\");\r\n      return;\r\n    }\r\n    e.preventDefault();\r\n    let obj = { id: uuidv4(), name: state.name, number: state.number };\r\n    addContact(obj);\r\n    setState(stateDefault);\r\n  };\r\n\r\n  return (\r\n    <form className=\"form\">\r\n      <label>\r\n        <b>Name</b>\r\n        <br />\r\n        <input type=\"text\" name=\"name\" placeholder=\"Sasha Grey\" value={state.name} onChange={(e) => inputHeandler(e)}></input>\r\n      </label>\r\n      <label>\r\n        <b>Number</b>\r\n        <br />\r\n        <input type=\"text\" name=\"number\" placeholder=\"+380503456789\" value={state.number} onChange={(e) => inputHeandler(e)}></input>\r\n      </label>\r\n      <input className=\"form__send\" type=\"button\" value=\"submit\" onClick={(e) => checkContact(e)}></input>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Phonebook;\r\n\r\nPhonebook.propTypes = {\r\n  addContact: PropTypes.func.isRequired,\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport \"./Contacts.css\";\r\n\r\nconst Сontacts = ({ contacts, removeContact }) => {\r\n  return (\r\n    <ul className=\"contacts__list\">\r\n      {contacts.map((contact) => (\r\n        <li key={contact.id} className=\"contacts__item\">\r\n          <span>\r\n            {contact.name}: {contact.number}\r\n          </span>\r\n          <img src=\"https://img.icons8.com/ios-filled/26/000000/close-window.png\" alt=\"delete\" className=\"contacts__item-delete\" onClick={() => removeContact(contact.id)} />\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default Сontacts;\r\n\r\nСontacts.propTypes = {\r\n  contacts: PropTypes.array.isRequired,\r\n  removeContact: PropTypes.func.isRequired,\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport \"./Filter.css\";\r\n\r\nconst Filter = ({ inputHeandlerFilter, filter, resetInput }) => {\r\n  return (\r\n    <form className=\"form_search\">\r\n      <label className=\"form_label\">\r\n        <b>Find contacts (write name or number)</b>\r\n        <br />\r\n        <span className=\"form_input\">\r\n          <input type=\"text\" name=\"name\" placeholder=\"Oleksandra or 123\" value={filter} onChange={(e) => inputHeandlerFilter(e)}></input>\r\n          {filter.length > 0 ? <img src=\"https://img.icons8.com/ios-filled/26/000000/close-window.png\" alt=\"delete\" onClick={resetInput} className=\"form__delete\" /> : null}\r\n        </span>\r\n      </label>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n\r\nFilter.propTypes = {\r\n  inputHeandlerFilter: PropTypes.func.isRequired,\r\n  filter: PropTypes.string.isRequired,\r\n  resetInput: PropTypes.func.isRequired,\r\n};\r\n","import React, { Fragment, Component } from \"react\";\r\nimport \"./App.css\";\r\n\r\nimport Section from \"./Components/Section/Section\";\r\n\r\n// Task2\r\nimport Phonebook from \"./Components/Phonebook/Phonebook\";\r\nimport Contacts from \"./Components/Contacts/Contacts\";\r\nimport Filter from \"./Components/Filter/Filter\";\r\n\r\nclass App extends Component {\r\n  state = {\r\n    contacts: [],\r\n    filteredContacts: [],\r\n    filter: \"\",\r\n  };\r\n  componentWillMount() {\r\n    const getArrayContacts = localStorage.getItem(\"PhoneBookContacts\");\r\n    if (!getArrayContacts) {\r\n      return;\r\n    }\r\n    this.setState({ contacts: JSON.parse(getArrayContacts) });\r\n  }\r\n  componentDidUpdate() {\r\n    localStorage.setItem(\"PhoneBookContacts\", JSON.stringify(this.state.contacts));\r\n  }\r\n  addContact = (contact) => {\r\n    if (this.state.contacts.find((item) => item.name === contact.name)) {\r\n      alert(`${contact.name} id already in contacts`);\r\n      return;\r\n    }\r\n    this.setState((prev) => ({ contacts: [contact, ...prev.contacts] }));\r\n  };\r\n  inputHeandlerFilter = ({ target }) => {\r\n    if (this.state.contacts <= 0) {\r\n      alert(\"Телефонна книга пуста\");\r\n      return;\r\n    }\r\n    this.setState({ filter: target.value });\r\n    const newArray = this.state.contacts.filter((contact) => contact.name.toUpperCase().includes(target.value.toUpperCase()) || contact.number.includes(target.value));\r\n    if (newArray.length <= 0) {\r\n      alert(\"За Вашим запитом нічого не знайдено\");\r\n      return;\r\n    }\r\n    this.setState({ filteredContacts: newArray });\r\n  };\r\n  removeContact = (id) => {\r\n    this.setState((prev) => ({ contacts: prev.contacts.filter((contact) => contact.id !== id) }));\r\n    if (this.state.filteredContacts.length > 0) {\r\n      this.setState((prev) => ({ filteredContacts: prev.filteredContacts.filter((contact) => contact.id !== id) }));\r\n    } else {\r\n      this.setState({ filter: \"\" });\r\n    }\r\n  };\r\n  resetInput = () => {\r\n    this.setState({ filter: \"\" });\r\n    this.setState({ filteredContacts: [] });\r\n  };\r\n  sort = (contacts) => {\r\n    return contacts.sort(function (a, b) {\r\n      let nameA = a.name.toUpperCase();\r\n      let nameB = b.name.toUpperCase();\r\n      if (nameA < nameB) {\r\n        return -1;\r\n      }\r\n      if (nameA > nameB) {\r\n        return 1;\r\n      }\r\n      return 0;\r\n    });\r\n  };\r\n  render() {\r\n    const { contacts, filteredContacts, filter } = this.state;\r\n    return (\r\n      <Fragment>\r\n        <Section title=\"Phonebook\">\r\n          <Phonebook addContact={this.addContact} />\r\n        </Section>\r\n        <br />\r\n        <Section title=\"Contacts\">\r\n          <Filter inputHeandlerFilter={this.inputHeandlerFilter} filter={filter} resetInput={this.resetInput} />\r\n          <Contacts contacts={this.sort(filteredContacts.length > 0 ? filteredContacts : contacts)} removeContact={this.removeContact} />\r\n        </Section>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}